cmake_minimum_required(VERSION 2.8)
project(tgui3 CXX)

option(SHARED "Build as a shared library" OFF)
option(DEBUG "Build for debugging" OFF)
option(RASPBERRYPI "Build for Raspberry Pi" OFF)
option(RASPBERRYPI_NORMAL "Build for Raspberry Pi (standard)" OFF)
option(STEAMWORKS "Build for Steam" off)
option(MAS "Build for Mac App Store" off)

set(USER_INCLUDE_PATH "" CACHE FILEPATH "Any extra include directories you want")
set(USER_LIBRARY_PATH "" CACHE FILEPATH "Any extra library directories you want")

include_directories("include")
include_directories(${USER_INCLUDE_PATH})
link_directories(${USER_LIBRARY_PATH})

set(SRC
	src/tgui3.cpp
	src/tgui3_sdl.cpp
)

if(WIN32 AND SHARED)
	LIST(APPEND SRC versioninfo.rc)
endif()

if(SHARED)
	set(TGUI3_LIB tgui3)
	add_library(${TGUI3_LIB} SHARED ${SRC})
else()
	set(TGUI3_LIB tgui3_static)
	add_library(${TGUI3_LIB} STATIC ${SRC})
endif()

if(WIN32)
	set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} /SUBSYSTEM:WINDOWS /IGNORE:4075 /IGNORE:4099")
	SET(FLAGS "${FLAGS} /D_CRT_SECURE_NO_WARNINGS /D_USE_MATH_DEFINES /EHsc /MP /W3 /wd4244 /wd4800 /wd4101 /MT")
	SET(FLAGS "${FLAGS} /DNTDDI_VERSION=0x06010000 /D_WIN32_WINNT=0x601 /DTGUI3_LIB_BUILD")
	set(FLAGS "${FLAGS} /DTGUI3_STATIC")
	if(DEBUG)
		set(FLAGS "${FLAGS} /DDEBUG")
	endif()
	set_target_properties(${TGUI3_LIB} PROPERTIES COMPILE_FLAGS "${FLAGS}")
else()
	if(NOT MAS)
		set(FLAGS "${FLAGS} -DTGUI3_LIB_BUILD -DTGUI3_STATIC -DNOOSKEWL_SHIM_STATIC -DNOOSKEWL_WEDGE_STATIC")
	endif()
	set(FLAGS "${FLAGS} -Wall")
	if(STEAMWORKS)
		set(FLAGS "${FLAGS} -DSTEAMWORKS")
	endif()
	if(DEBUG)
		set(FLAGS "${FLAGS} -g -DDEBUG -fsanitize=address -fsanitize=leak")
	endif()
	if(IOS)
		set(FLAGS "${FLAGS} -DIOS")
		SET_TARGET_PROPERTIES(${TGUI3_LIB} PROPERTIES COMPILE_FLAGS "${FLAGS}")
		set_xcode_property(${TGUI3_LIB} IPHONEOS_DEPLOYMENT_TARGET "8.0")
	elseif(APPLE)
		if(MAS)
			set(FLAGS "${FLAGS} -DMAS -stdlib=libc++ -std=c++11")
		endif()
		set(FLAGS "${FLAGS} -O2 -fvisibility=hidden -fno-objc-arc")
		SET_TARGET_PROPERTIES(${TGUI3_LIB} PROPERTIES COMPILE_FLAGS "${FLAGS}")
		set_target_properties(${TGUI3_LIB} PROPERTIES MACOSX_RPATH on)
		set_target_properties(${TGUI3_LIB} PROPERTIES BUILD_WITH_INSTALL_RPATH on)
	else()
		set(FLAGS "${FLAGS} -fvisibility=hidden -Wno-psabi -std=c++0x")
		if (RASPBERRYPI)
			set(FLAGS "${FLAGS} -DRASPBERRYPI=1")
			set(FLAGS "${FLAGS} -DRASPBERRYPI=1")
		endif()
		if (RASPBERRYPI_NORMAL)
			set(FLAGS "${FLAGS} -DRASPBERRYPI_NORMAL=1")
			set(FLAGS "${FLAGS} -DRASPBERRYPI_NORMAL=1")
		endif()
		if (NOT DEBUG AND (RASPBERRYPI OR RASPBERRYPI_NORMAL))
			set(CMAKE_C_FLAGS_RELEASE "-Os")
			set(CMAKE_CXX_FLAGS_RELEASE "-Os")
		endif()
		if (NOT RASPBERRYPI AND NOT RASPBERRYPI_NORMAL)
			set(CMAKE_C_FLAGS_RELEASE "-O2")
			set(CMAKE_CXX_FLAGS_RELEASE "-O2")
		endif()
		IF(CMAKE_SYSTEM_PROCESSOR STREQUAL "x86_64" AND SHARED)
			set(FLAGS "${FLAGS} -fPIC")
		ENDIF()
		SET_TARGET_PROPERTIES(${TGUI3_LIB} PROPERTIES COMPILE_FLAGS "${FLAGS}")
	endif()
endif()
